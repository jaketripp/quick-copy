{"version":3,"sources":["components/RecentlyCopied.js","components/Toast.js","components/Header.js","components/DeleteToggle.js","components/SplitCharacterToggle.js","components/SplitCharacterInput.js","components/Form.js","js/copy.js","components/CopyBlock.js","components/CopyBlockList.js","components/Footer.js","components/App.js","serviceWorker.js","components/Theme.js","index.js"],"names":["RecentlyCopied","props","react_default","a","createElement","index_es","className","color","gutterBottom","variant","content","Toast","Snackbar_default","anchorOrigin","vertical","horizontal","open","shouldShowToast","onClose","autoHideDuration","ContentProps","aria-describedby","message","id","Header","DeleteToggle","control","checked","shouldDeleteAfter","onChange","handleSwitchChange","label","SplitCharacterToggle","shouldSplitOnNewLines","SplitCharacterInput","placeholder","value","splitCharacter","handleSplitCharacterChange","Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleTextChange","e","setState","textContent","target","handleFormSubmit","preventDefault","formSubmit","state","onSubmit","multiline","rowsMax","type","disabled","Component","copyTextToClipboard","text","navigator","clipboard","writeText","then","console","log","err","error","textArea","document","body","appendChild","focus","select","msg","execCommand","removeChild","fallbackCopyTextToClipboard","CopyBlock","copyBlockClicked","showCopiedToast","updateRecentlyCopied","show","setTimeout","deleteCopyBlock","uuid","cardClass","onClick","CopyBlockList","keys","copyBlockMap","map","components_CopyBlock","key","toggleCopiedToast","Footer","href","App","mostRecentlyCopied","recentlyCopied","handleDeleteToggleChange","handleSplitCharacterToggleChange","split","reduce","copyBlock","trimmedCopyBlock","trim","uuidv4","shouldShowRecentlyCopied","shouldShowCopyBlockList","values","length","splittingOnCustomCharacter","components_Header","components_DeleteToggle","components_SplitCharacterToggle","components_SplitCharacterInput","components_CopyBlockList","components_Form","onTextChange","components_RecentlyCopied","components_Toast","components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","createMuiTheme","palette","primary","blue","secondary","orange","typography","useNextVariants","ReactDOM","render","styles","theme","components_App","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7661cfc0.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\n\nconst RecentlyCopied = props => (\n  <Card className=\"recentlyCopied\">\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          Recently copied\n        </Typography>\n        <Typography variant=\"h5\">\n          {props.content}\n        </Typography>\n      </CardContent>\n    </Card>\n);\n\nexport default RecentlyCopied;\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nconst Toast = props => (\n  <Snackbar\n    className=\"toast\"\n    anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n    open={props.shouldShowToast}\n    onClose={props.onClose}\n    variant=\"success\"\n    autoHideDuration={1500}\n    ContentProps={{\n      \"aria-describedby\": \"message-id\"\n    }}\n    message={<span id=\"message-id\">Copied!</span>}\n  />\n);\n\nexport default Toast;\n","import React from \"react\";\n\nconst Header = () => (\n  <div className=\"header\">\n    <h1>Quick Copy</h1>\n  </div>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { FormControlLabel, Switch } from \"@material-ui/core\";\n\nconst DeleteToggle = props => (\n  <div className=\"deleteToggle\">\n    <FormControlLabel\n      control={\n        <Switch\n          checked={props.shouldDeleteAfter}\n          onChange={props.handleSwitchChange}\n          color=\"primary\"\n        />\n      }\n      label=\"Delete block after copying\"\n    />\n  </div>\n);\n\nexport default DeleteToggle;\n","import React from \"react\";\nimport { FormControlLabel, Switch } from \"@material-ui/core\";\n\nconst SplitCharacterToggle = props => (\n  <div className=\"splitCharacterToggle\">\n    <FormControlLabel\n      control={\n        <Switch\n          checked={props.shouldSplitOnNewLines}\n          onChange={props.handleSwitchChange}\n          color=\"primary\"\n        />\n      }\n      label=\"Split on newlines\"\n    />\n  </div>\n);\n\nexport default SplitCharacterToggle;\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\nconst SplitCharacterInput = props => (\n  <div className=\"splitCharacterInput\">\n    <TextField\n      className=\"form__textarea\"\n      id=\"standard-with-placeholder\"\n      label=\"Custom split character\"\n      placeholder=\"i.e. & : | { etc\"\n      value={props.splitCharacter}\n      onChange={props.handleSplitCharacterChange}\n    />\n  </div>\n);\n\nexport default SplitCharacterInput;\n","import React, { Component } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textContent: \"\"\n    };\n  }\n\n  handleTextChange = e => {\n    this.setState({ textContent : e.target.value });\n  }\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    this.setState({ textContent: \"\" });\n    this.props.formSubmit(this.state.textContent);\n  };\n\n  render(props) {\n    return (\n      <form className=\"form\" onSubmit={this.handleFormSubmit}>\n        <TextField\n          className=\"form__textarea\"\n          id=\"standard-multiline-flexible\"\n          label=\"What you want to copy\"\n          multiline\n          rowsMax=\"12\"\n          value={this.state.textContent}\n          onChange={this.handleTextChange}\n        />\n        <div className=\"form__button-container\">\n          <Button\n            type=\"submit\"\n            color=\"secondary\"\n            variant=\"contained\"\n            disabled={this.state.textContent === \"\"}\n          >\n            Submit\n          </Button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","function fallbackCopyTextToClipboard(text) {\n  var textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    var successful = document.execCommand('copy');\n    var msg = successful ? 'successful' : 'unsuccessful';\n    console.log('Fallback: Copying text command was ' + msg);\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n\n  document.body.removeChild(textArea);\n}\nfunction copyTextToClipboard(text) {\n  if (!navigator.clipboard) {\n    fallbackCopyTextToClipboard(text);\n    return;\n  }\n  navigator.clipboard.writeText(text).then(function() {\n    console.log('Async: Copying to clipboard was successful!');\n  }, function(err) {\n    console.error('Async: Could not copy text: ', err);\n  });\n}\n\nexport default copyTextToClipboard;","import React, { Component } from \"react\";\nimport copyTextToClipboard from \"../js/copy\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\n\nclass CopyBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true\n    }\n  }\n  \n  copyBlockClicked = () => {\n\n    const { content } = this.props;\n\n    copyTextToClipboard(content);\n    this.props.showCopiedToast();\n    this.props.updateRecentlyCopied(content);\n\n    if (this.props.shouldDeleteAfter) {\n      // apply css class to fade out\n      this.setState({ show: false });\n      // wait a bit then remove from map\n      setTimeout(() => {\n        this.props.deleteCopyBlock(this.props.uuid);\n      }, 300);\n    }\n    \n  };\n\n  render() {\n    const cardClass = this.state.show ? 'copyblock' : 'copyblock hidden';\n    return (\n      <Card onClick={this.copyBlockClicked} className={cardClass}>\n        <CardContent>\n          <Typography>{this.props.content}</Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nexport default CopyBlock;\n","import React from \"react\";\nimport CopyBlock from \"./CopyBlock\";\n\nconst CopyBlockList = props => (\n  <div className=\"copy-block-list\">\n    {Object.keys(props.copyBlockMap).map(uuid => {\n      return (\n        <CopyBlock\n          key={uuid}\n          uuid={uuid}\n          content={props.copyBlockMap[uuid]}\n          deleteCopyBlock={props.deleteCopyBlock}\n          updateRecentlyCopied={props.updateRecentlyCopied}\n          shouldDeleteAfter={props.shouldDeleteAfter}\n          showCopiedToast={props.toggleCopiedToast}\n        />\n      );\n    })}\n  </div>\n);\n\nexport default CopyBlockList;\n","import React from \"react\";\n\nconst Footer = () => (\n  <div className=\"footer\">\n    <a href=\"https://jaketripp.com\"><p>Jake Tripp &copy; 2018</p></a>\n  </div>\n);\n\nexport default Footer;\n","// packages\nimport React, { Component } from \"react\";\nimport uuidv4 from \"uuid/v4\";\n\n// components\nimport RecentlyCopied from \"./RecentlyCopied\";\nimport Toast from \"./Toast\";\nimport Header from \"./Header\";\nimport DeleteToggle from \"./DeleteToggle\";\nimport SplitCharacterToggle from \"./SplitCharacterToggle\";\nimport SplitCharacterInput from \"./SplitCharacterInput\";\nimport Form from \"./Form\";\nimport CopyBlockList from \"./CopyBlockList\";\nimport Footer from \"./Footer\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copyBlockMap: {},\n      shouldDeleteAfter: true,\n      shouldSplitOnNewLines: true,\n      splitCharacter: \"\\n\",\n      shouldShowToast: false,\n      recentlyCopied: \"\"\n    };\n  }\n\n  // update recently copied when copy block clicked\n  updateRecentlyCopied = mostRecentlyCopied => {\n    this.setState({ recentlyCopied: mostRecentlyCopied });\n  };\n\n  // update parent state when switch toggled\n  handleDeleteToggleChange = e => {\n    this.setState({ shouldDeleteAfter: !this.state.shouldDeleteAfter });\n  };\n\n  // update parent state when switch toggled\n  handleSplitCharacterToggleChange = e => {\n    this.setState({ \n      shouldSplitOnNewLines: !this.state.shouldSplitOnNewLines,\n      // reset back to newline for default, or set to empty string - won't split\n      splitCharacter: !this.state.shouldSplitOnNewLines ? \"\\n\" : \"\"\n    });\n  };\n\n  handleSplitCharacterChange = e => {\n    this.setState({ splitCharacter : e.target.value });\n  }\n\n  // have form update map when submit button pressed\n  formSubmit = (textContent) => {\n    const copyBlockMap = textContent\n      .split(this.state.splitCharacter)\n      .reduce((map, copyBlock) => {\n        let trimmedCopyBlock = copyBlock.trim();\n        if (trimmedCopyBlock) {\n          let uuid = uuidv4();\n          map[uuid] = trimmedCopyBlock;\n        }\n        return map;\n      }, {});\n    this.setState({ copyBlockMap });\n  };\n\n  // delete block from map -> passed to child component\n  deleteCopyBlock = uuid => {\n    let { copyBlockMap } = this.state;\n    delete copyBlockMap[uuid];\n    this.setState({ copyBlockMap });\n  };\n\n  toggleCopiedToast = () => {\n    this.setState({ shouldShowToast: !this.state.shouldShowToast });\n  };\n\n  render() {\n    const shouldShowRecentlyCopied = !!this.state.recentlyCopied;\n    const shouldShowCopyBlockList =\n      Object.values(this.state.copyBlockMap).length > 0;\n    const splittingOnCustomCharacter = !this.state.shouldSplitOnNewLines;\n    return (\n      <div className=\"App\">\n        <div className=\"main\">\n          <Header />\n\n          <DeleteToggle\n            shouldDeleteAfter={this.state.shouldDeleteAfter}\n            handleSwitchChange={this.handleDeleteToggleChange}\n          />\n\n          <SplitCharacterToggle\n            shouldSplitOnNewLines={this.state.shouldSplitOnNewLines}\n            handleSwitchChange={this.handleSplitCharacterToggleChange}\n          />\n\n          {splittingOnCustomCharacter && (\n            <SplitCharacterInput\n              splitCharacter={this.state.splitCharacter}\n              handleSplitCharacterChange={this.handleSplitCharacterChange}\n            />\n          )}\n\n          {shouldShowCopyBlockList && (\n            <CopyBlockList\n              copyBlockMap={this.state.copyBlockMap}\n              updateRecentlyCopied={this.updateRecentlyCopied}\n              deleteCopyBlock={this.deleteCopyBlock}\n              toggleCopiedToast={this.toggleCopiedToast}\n              shouldDeleteAfter={this.state.shouldDeleteAfter}\n            />\n          )}\n\n          <Form\n            textContent={this.state.textContent}\n            copyBlockMap={this.state.copyBlockMap}\n            formSubmit={this.formSubmit}\n            onTextChange={this.onTextChange}\n          />\n        </div>\n        <div className=\"sidebar\">\n          {shouldShowRecentlyCopied && (\n            <RecentlyCopied content={this.state.recentlyCopied} />\n          )}\n\n          <Toast\n            shouldShowToast={this.state.shouldShowToast}\n            onClose={this.toggleCopiedToast}\n          />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { orange, blue } from \"@material-ui/core/colors\";\n\nexport default createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: orange\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from './serviceWorker';\n\n// styles\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./components/Theme\";\nimport \"typeface-roboto\";\nimport \"./styles/main.scss\";\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}